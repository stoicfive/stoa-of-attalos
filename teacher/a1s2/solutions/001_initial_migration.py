"""
Sample initial migration - Reference

This shows what an autogenerated migration looks like.
Students will generate their own with: alembic revision --autogenerate
"""

"""add trades table

Revision ID: 001_initial
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001_initial'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create trades table
    op.create_table(
        'trades',
        sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column('symbol', sa.String(length=10), nullable=False),
        sa.Column('entry_price', sa.Numeric(precision=12, scale=4), nullable=False),
        sa.Column('exit_price', sa.Numeric(precision=12, scale=4), nullable=False),
        sa.Column('shares', sa.Integer(), nullable=False),
        sa.Column('trade_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('pnl', sa.Numeric(precision=12, scale=2), 
                  sa.Computed('(exit_price - entry_price) * shares'), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.CheckConstraint('entry_price > 0', name='check_entry_price_positive'),
        sa.CheckConstraint('exit_price > 0', name='check_exit_price_positive'),
        sa.CheckConstraint('shares > 0', name='check_shares_positive'),
        sa.PrimaryKeyConstraint('id'),
        schema='trading'
    )


def downgrade() -> None:
    # Drop trades table
    op.drop_table('trades', schema='trading')
